Common Commands
    Create Initial project  
        django-admin startproject <project name>

    Add app
        django-admin startapp <app name>

    Run Server
        py manage.py runserver

Main Project files:
    manage.py 
        A shortcut to use the django-admin command-line utility. It’s used to run management commands related to our project. We will use it to run the development server, run tests, create migrations and much more.

    __init__.py
        This empty file tells Python that this folder is a Python package.

    settings.py 
        This file contains all the project’s configuration. We will refer to this file all the time!

    urls.py 
        This file is responsible for mapping the routes and paths in our project. For example, if you want to show something in the URL /about/, you have to map it here first.

    wsgi.py 
        This file is a simple gateway interface used for deployment. You don’t have to bother about it. Just let it be for now.


Django Apps
In the Django philosophy we have two important concepts:

app
    Is a Web application that does something. An app usually is composed of a set of models (database tables), views, templates, tests.
project
    Is a collection of configurations and apps. One project can be composed of multiple apps, or a single app.

App Files:
    migrations/
        Here Django store some files to keep track of the changes you create in the models.py file, so to keep the database and the models.py synchronized.
    admin.py
        This is a configuration file for a built-in Django app called Django Admin.
    apps.py
        This is a configuration file of the app itself.
    models.py
        Here is where we define the entities of our Web application. The models are translated automatically by Django into database tables.
    tests.py
        This file is used to write unit tests for the app.
    views.py
        This is the file where we handle the request/response cycle of our Web application.

